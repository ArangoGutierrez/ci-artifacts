# Which version/release of OpenShift? Include major version and major
# release, no minor releases.
openshift_release: '{{ oc_release | default("4.4") }}'

# AWS deployment
aws_check: '{{ use_aws | default("yes") }}'

# Force reinstallation of all operators, CRDs, etc.?
reinstall: '{{ force_reinstall | default("yes") }}'

# user mode, set the behaviour of the playbook, available modes:
# - install: basic install of desired operators operators
# - uninstall: if installed, uninstall desired operators
# - ci: ci bot mode
# REQUIRED.
user_mode: '{{ mode | default("ci") }}'

# Set task timeout (in seconds). Default: 5 mins
timeout_value_sec: '{{ task_timeout | default("300") }}'

# Set RHEL version. Default is RHEL 8. Set to RHEL 7 if using RHEL 7
rhel_ver: '{{ rhel_version | default("8") }}'

# Set golang vars
GOROOT: '{{ goroot | default("/usr/lib/golang") }}'
GOPATH: '{{ gopath | default("${HOME}/go") }}'
GOPROXY: '{{ goproxy | default("https://proxy.golang.org") }}'

# Test  NFD, SRO  or all?
test_nfd_operator: '{{ test_nfd | default("yes") }}'
test_sr_operator: '{{ test_sro | default("yes") }}'
test_nv_operator: '{{ test_nv | default("no") }}'

# Install NFD, SRO  or all?
install_nfd_operator: '{{ install_nfd | default("yes") }}'
install_sr_operator: '{{ install_sro | default("no") }}'
install_nv_operator: '{{ install_nv | default("no") }}'

# Uninstall NFD, SRO or all?
uninstall_nfd_operator: '{{ uninstall_nfd | default("no") }}'
uninstall_sr_operator: '{{ uninstall_sro | default("no") }}'
uninstall_nv_operator: '{{ uninstall_nv | default("no") }}'

# json raw template from running workers
gpu_machineset_template: "gpu_machineset_aws_template.json"

# AWS desired instance type
gpu_instance_type: "p3.2xlarge"

# library for machine type parsing 
parse_machine_set: "roles/openshift_node/files/aws_machineset_json.sh"

# GPU definition file, Cloud agnostic key=values
gpu_machineset_deff: "gpu_machineset_definition.json"

